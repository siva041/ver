
RetrieveItemQuantityByProximityProcessor

Request-->  SkuCode,IsMultiSkuListPresent,ZipCode,State,City,LocationSearchRange
Response---> desc,DepQuantity,MultiSkuList


Flow :-

Step 1:- checks the zip got from the request is not empty they it is assigned to address object.
         if it is not in address object we are assigned city and state 
		if (StringUtils.isNotBlank(req.getZipCode()))
			address.setZip(req.getZipCode());
		else {
			address.setCity(req.getCity());
			address.setState(req.getState());
		}
		
Step 2:-from headers we are checking ClientOrderInfo where it is blank are not.
         if SkuCode is empty and IsMultiSkuListPresent  is true  and !ClientOrderInfo.equals(NOT_SET) && contains "ISPU"
		 locationSearchRange =10 assinged 
		 if not means we are taking the locationSearchRange value from the request.

Step 3:- to find SkuLocationList we are calling storeServices..storeLocationByZip(address.getZip(), locSearchRange,D, 25, CacheOverride.PREFER_CACHED_VALUE);
         if address class having zip code (check step1) else storeServices.storeLocationByCityState(address.getCity(),address.getState(), locSearchRange, D, 25,CacheOverride.PREFER_CACHED_VALUE);
		  from SkuLocationList(object) we are retriving ListString locations.
		  from this ListString locations connect to SIG gateway to determine SAP location based on SapEnabled condition.


Step 4:- sapLocations.size() = 0  then we processSAP(req, header, locations, skuLocationList, sapLocations, locationSearchRange, address);

                         1) first we are checking the SkuCode empty are not from the req if it is empty we are  process request for single item.
						     method : -processSkuLocRequestSAP(req, locations, skuLocationList,itemQuantityByProximitySvcResponse, sapLocations);
							 Description :-
                             Location =0 
							 first we are checking the requet loction size if it is zero we are setting desc and DepQuantity (SkuLocResponse  
							 itemService.skuQuantityByProximity(skuLocRequest);)  to the response object.
							 sapLocations.size()=0:-
							 sapItemCall-->domainDataRetriever.getItemDetails(itemreq);===>ItemResponse--> Description  ---main response  set 
							 mergeSAPCall--->getSkuqty---> response--DepQuantity .
						 2) if it is blank then we are process request from the multiple item 
						     method :- processMultiSkuLocRequestSAP(req, locations, skuLocationList,itemQuantityByProximitySvcResponse, sapLocations,locationSearchRange, address);
                             
							 
							 processMultiSkuLocRequestSAP---> The Method Starts from that process
							 
							 initializeTmpMultiSkuLocResp-->Add records for each sku. For each SKU add location List
							 
            Step:1 -> if (locations.size()  0)   Make BAU OMQ call ---> Its having the one condition to get BAU Call
							 
							 //Copy multiSkuLocResponse into tmpmultiSkuLocResponse object
							 
							 //Here its the service call
							 
							 multiSkuLocResponse = itemService.multiSkuQuantityByProximity(multiSkuLocRequest); 
							 
            Step:2 -> if (sapLocations.size()  0)   Make SAP-ATP call ---> Its having the another condition to get SAP-ATP Call
							 
							 //	Get SkuShortDesc and populate tmpmultiSkuLocResp - sapItem call
							 
							 //call SAPItem omq for getting ShortDescription of SKU codes
							 
							 //Here its the service call
							 
							 ItemResponse itemresp = domainDataRetriever.getItemDetails(itemreq);
							 
							 //Here Starts with SAP-SIG inventory call
							 
							 //Add a iteminvdata to get wareHouse quantity
							 
							 //Here its service call
							 
						     ItemInventoryResponse iteminvresp = domainDataRetriever.getItemInventoryDetails(iteminvreq);
							 
							 //Add results into tmpMultiSkuLocResp
							 
							 //Get skuqty and setting into the wareHouse
							 
							 skuqty = getSkuqty(TmpSkuQtyLst, skuLst, itmInv.getSku()); determine skuqty to update
							 
            Step:3 -> populateMultiSkuLocResponseSAP ---> Its starts the process 

                             //Here we are setting below fields to itemQuantityByProximitySvcResponse 
							 
							 setSkuCode
							 setSkuLocationList
							 setSkuDescription
							 setQuantityInFulfillment
							 setQuantityAvailable
							 
Step:5 -> sapLocations.size() !=0 then we processBAU(req, header);
                             1. From request we are checking zipcode & city & state
							 2. From Headers we are checking the clientOrderInfo
							 3. process request for single item or multiple items 
							    1. if (StringUtils.isNotBlank(req.getSkuCode()))
								   processSkuLocRequest(req, address, clientOrderInfo,itemQuantityByProximitySvcResponse);
								   //Here starts the process 
								   SLDRetrieveStoreLocations ---> service to retrieve store location information
								   //Here below are the service information
								   1. if (StringUtils.isNotBlank(address.getZip()))
								   storeLocations = (StoreLocationsResponse) storeServices.storeLocationByZip(address.getZip(), locSearchRange,
								    D, 25, CacheOverride.PREFER_CACHED_VALUE);
			                       
								   2. else storeLocations = (StoreLocationsResponse) storeServices.storeLocationByCityState(address.getCity(),
		                           address.getState(), locSearchRange, D, 25,CacheOverride.PREFER_CACHED_VALUE);
								   
							    2. else step 
								   processMultiSkuLocRequest(req, address, clientOrderInfo,itemQuantityByProximitySvcResponse)
								   
          
		 
